apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'maven-publish'

// version information
def versionMajor = 1 // major
def versionMinor = 5 // minor
def versionPatch = 0 // revision

ext {
    version_name = "${versionMajor}.${versionMinor}.${versionPatch}"
    artifact_name = 'canvas-view'
}

def isReleaseBuild() {
    return !ext.version_name.contains("SNAPSHOT")
}

def getAWSUrl() {
    if (isReleaseBuild()) {
        return AWS_URL
    } else {
        return AWS_URL_SNAPSHOT
    }
}

def getArtifactFilePath() {
    if (isReleaseBuild()) {
        return "$buildDir/outputs/aar/$artifact_name-release.aar"
    } else {
        return "$buildDir/outputs/aar/$artifact_name-debug.aar"
    }
}

buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
    }
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        archivesBaseName = "${artifact_name}"
        versionName "${version_name}"
    }
    sourceSets {
        main {
            java.srcDirs = ['src']
            manifest.srcFile 'AndroidManifest.xml'
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            version = "${version_name}"
            groupId 'com.docutools'
            artifactId "${artifact_name}"
            artifact getArtifactFilePath()
        }
    }
    repositories {
        maven {
            url getAWSUrl()
            credentials (AwsCredentials) {
                accessKey AWS_ACCESS_KEY
                secretKey AWS_SECRET_KEY
            }
        }
    }
}